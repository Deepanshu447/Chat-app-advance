import React from 'react'

const Clientapi = () => {
  return (
     <div className="main-container">
            <h1>Client React DOM APIs</h1>
            <p className="intro">
                The react-dom/client APIs let you render React components on the client (in the browser). These APIs are typically used at the top level of your app to initialize your React tree. A framework may call them for you. Most of your components don’t need to import or use them.
            </p>

            <section>
                <h2>Client APIs </h2>
                <ul>
                    <li>createRoot lets you create a root to display React components inside a browser DOM node</li>
                    <li>hydrateRoot lets you display React components inside a browser DOM node whose HTML content was previously generated by react-dom/server.</li>
                    
                </ul>
            </section>

            <section>
                <h2>Browser support</h2>
                <p>
                    React supports all popular browsers, including Internet Explorer 9 and above. Some polyfills are required for older browsers such as IE 9 and IE 10.
                </p>
                <p>React components are JavaScript functions that return markup:</p>
            </section>

            <section>
                <h2>Writing markup with JSX</h2>
                <p>
                   Each React component is a JavaScript function that may contain some markup that React renders into the browser. React components use a syntax extension called JSX to represent that markup. JSX looks a lot like HTML, but it is a bit stricter and can display dynamic information.

If we paste existing HTML markup into a React component, it won’t always work:
                </p>
                <p>Have a look at the result:</p>
            </section>
        </div>
  )
}

export default Clientapi